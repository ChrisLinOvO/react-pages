{"version":3,"sources":["components/List.tsx","components/AddToList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","people","map","person","className","src","img","name","age","note","AddToList","setPeople","useState","input","setInput","handleChange","e","target","value","type","onChange","placeholder","onClick","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA6BeA,EAtBe,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAe9B,OACE,8BAdWA,EAAOC,KAAI,SAAAC,GACd,OACI,qBAAIC,UAAU,OAAd,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAWC,IAAKF,EAAOG,MACtC,6BAAKH,EAAOI,UAEhB,8BAAIJ,EAAOK,IAAX,gBACA,mBAAGJ,UAAU,YAAb,SAA0BD,EAAOM,gB,qBCkEtCC,EA7EqB,SAAC,GAAwB,IAAvBT,EAAsB,EAAtBA,OAAOU,EAAe,EAAfA,UACzC,EAA0BC,mBAAS,CAC/BL,KAAM,GACNC,IAAK,GACLC,KAAM,GACNH,IAAK,KAJT,mBAAOO,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAClBF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOV,KAAOS,EAAEC,OAAOC,UAuBpC,OACE,sBAAKd,UAAU,YAAf,UACQ,uBACIe,KAAK,OACLC,SAAUL,EACVX,UAAU,kBACVG,KAAK,OACLW,MAAOL,EAAMN,KACbc,YAAY,SAEhB,uBACIF,KAAK,OACLC,SAAUL,EACVX,UAAU,kBACVG,KAAK,MACLW,MAAOL,EAAML,IACba,YAAY,QAEhB,uBACIF,KAAK,OACLC,SAAUL,EACVX,UAAU,kBACVG,KAAK,MACLW,MAAOL,EAAMP,IACbe,YAAY,cAEhB,0BACAD,SAAUL,EACNX,UAAU,kBACVG,KAAK,OACLW,MAAOL,EAAMJ,KACbY,YAAY,SAEhB,wBACIC,QAtDQ,WACZT,EAAMN,MAASM,EAAML,MAEzBG,EAAU,GAAD,mBACFV,GADE,CAEL,CACIM,KAAMM,EAAMN,KACZC,IAAKe,SAASV,EAAML,KACpBF,IAAKO,EAAMP,IACXG,KAAMI,EAAMJ,SAIpBK,EAAS,CACLP,KAAM,GACNC,IAAK,GACLF,IAAK,GACLG,KAAM,OAsCFL,UAAU,gBAFd,6BCjCGoB,MA1Bf,WACE,MAAyBZ,mBAA2B,CAClD,CACEL,KAAK,MACLC,IAAI,GACJF,IAAI,wFACJG,KAAK,SAEP,CACEF,KAAK,OACLC,IAAI,GACJF,IAAI,uEACJG,KAAK,WAXT,mBAAOR,EAAP,KAAcU,EAAd,KAgBA,OACE,sBAAKP,UAAU,MAAf,UACC,iDACA,cAAC,EAAD,CAAMH,OAAQA,IACd,cAAC,EAAD,CAAWU,UAAWA,EAAWV,OAAQA,QCrB/BwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c834431.chunk.js","sourcesContent":["import React from 'react';\nimport { IState as Props } from \"../App\";\n\ninterface IProps {\n    people: Props[\"people\"]\n}\n\nconst List:React.FC<IProps> = ({people})=> {\n    const renderList  = () : JSX.Element[]=> {\n        return people.map(person => {\n            return (\n                <li className=\"List\">\n                    <div className=\"List-header\">\n                        <img className=\"List-img\" src={person.img}/>\n                        <h2>{person.name}</h2>\n                    </div>\n                    <p>{person.age} years old</p>\n                    <p className=\"List-note\">{person.note}</p>\n                </li>\n            )\n        })\n    }\n  return (\n    <div>\n      {renderList()}\n    </div>\n  );\n}\n\nexport default List;\n","import React,{useState} from 'react';\nimport { IState as Props } from \"../App\";\ninterface IProps {\n    setPeople: React.Dispatch<React.SetStateAction<Props[\"people\"]>>\n    people: Props[\"people\"]\n}\nconst AddToList : React.FC<IProps>= ({people,setPeople}) => {\n    const [input, setInput] = useState({\n        name: \"\",\n        age: \"\",\n        note: \"\",\n        img: \"\"\n    }) \n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleClick = () => {\n        if(!input.name || !input.age) return\n\n        setPeople([\n            ...people,\n            {\n                name: input.name,\n                age: parseInt(input.age),\n                img: input.img,\n                note: input.note\n            }\n        ]);\n\n        setInput({\n            name: \"\",\n            age: \"\",\n            img: \"\",\n            note: \"\"\n        })\n    }\n  return (\n    <div className=\"AddToList\">\n            <input \n                type=\"text\"\n                onChange={handleChange}\n                className=\"AddToList-input\"\n                name=\"name\"\n                value={input.name}\n                placeholder=\"Name\"\n            />\n            <input \n                type=\"text\"\n                onChange={handleChange}\n                className=\"AddToList-input\"\n                name=\"age\"\n                value={input.age}\n                placeholder=\"Age\"\n            />\n            <input \n                type=\"text\"\n                onChange={handleChange}\n                className=\"AddToList-input\"\n                name=\"img\"\n                value={input.img}\n                placeholder=\"Image Url\"\n            />\n            <textarea\n            onChange={handleChange}\n                className=\"AddToList-input\"\n                name=\"note\"\n                value={input.note}\n                placeholder=\"Note\"\n            />\n            <button\n                onClick={handleClick}\n                className=\"AddToList-btn\"\n            >\n                Add to List\n            </button>\n        </div>\n  );\n}\n\nexport default AddToList;\n","import React ,{useState}from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport List from './components/List';\nimport AddToList from './components/AddToList';\n\nexport interface IState {\n  people: {\n      name: string\n      age: number\n      img: string\n      note?: string\n  }[]\n}\nfunction App() {\n  const [people,setPeople]=useState<IState[\"people\"]>([\n    {\n      name:\"LBJ\",\n      age:36,\n      img:\"https://p.kindpng.com/picc/s/110-1109845_lebron-james-lakers-flex-hd-png-download.png\",\n      note:\"HI 23\"\n    },\n    {\n      name:\"KOBE\",\n      age:40,\n      img:\"https://www.pngitem.com/pimgs/m/1-14685_kobe-png-transparent-png.png\",\n      note:\"HI 24\"\n    }\n  ])\n\n  \n  return (\n    <div className=\"App\">\n     <h1>All Start Party</h1>\n     <List people={people}/>\n     <AddToList setPeople={setPeople} people={people}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}